# .github/workflows/deploy.yaml
name: Build and Deploy Latest

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHC_TOKEN }}

    - name: Build and push with tags
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ghcr.io/sumansaurabh/task-bb/backend:latest
          ghcr.io/sumansaurabh/task-bb/backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
     
     
    - name: Get ArgoCD Token
      id: argocd-auth
      run: |
        # Fetch ArgoCD token using admin credentials
        ARGOCD_TOKEN=$(curl -k -X POST ${{ secrets.ARGOCD_SERVER }}/api/v1/session \
          -d '{"username":"admin","password":"${{ secrets.ARGOCD_PASSWORD }}"}' \
          -H "Content-Type: application/json" | jq -r .token)
        
        if [ "$ARGOCD_TOKEN" = "null" ] || [ -z "$ARGOCD_TOKEN" ]; then
          echo "❌ Failed to get ArgoCD token"
          exit 1
        fi
        
        echo "✅ Successfully obtained ArgoCD token"
        echo "argocd_token=${ARGOCD_TOKEN}" >> $GITHUB_OUTPUT
    - name: Deploy via ArgoCD API
      run: |
        echo "🚀 Deploying via ArgoCD API using manifest file..."
        
        # Get the short commit SHA as the tag
        LATEST_TAG="${{ github.sha }}"
        SHORT_TAG=$(echo "$LATEST_TAG" | cut -c1-7)
        
        echo "📋 Using image tag: $SHORT_TAG"
        
        # Read manifest file and replace :latest with current tag
        DEPLOYMENT_MANIFEST=$(cat k8s-manifests/app/deployment.yaml | sed "s/:latest/:$SHORT_TAG/g")
        
        echo "📝 Updated manifest with image: ghcr.io/sumansaurabh/task-bb/backend:$SHORT_TAG"
        
        # Escape manifest for JSON
        ESCAPED_MANIFEST=$(echo "$DEPLOYMENT_MANIFEST" | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')
        
        # Deploy using ArgoCD API
        echo "🌐 Calling ArgoCD API..."
        
        # Create JSON payload file to avoid shell escaping issues
        echo "{" > payload.json
        echo "  \"manifest\": \"$ESCAPED_MANIFEST\"," >> payload.json
        echo "  \"group\": \"apps\"," >> payload.json
        echo "  \"version\": \"v1\"," >> payload.json
        echo "  \"kind\": \"Deployment\"," >> payload.json
        echo "  \"name\": \"nodejs-app\"," >> payload.json
        echo "  \"namespace\": \"default\"" >> payload.json
        echo "}" >> payload.json
        
        echo "📄 Created JSON payload:"
        cat payload.json
        
        RESPONSE=$(curl -s -w "\n%{http_code}" \
          --location '${{ secrets.ARGOCD_SERVER }}/api/v1/applications/nodejs-app-api/resource' \
          --header 'Content-Type: application/json' \
          --header 'Authorization: Bearer ${{ steps.argocd-auth.outputs.argocd_token }}' \
          --data @payload.json)
        
        # Check response
        HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
        RESPONSE_BODY=$(echo "$RESPONSE" | head -n -1)
        
        # Cleanup
        rm -f payload.json
        
        if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ]; then
            echo "✅ Deployment successful!"
            echo "🎯 Applied image: ghcr.io/sumansaurabh/task-bb/backend:$SHORT_TAG"
        else
            echo "❌ Deployment failed (HTTP $HTTP_CODE)"
            echo "Response: $RESPONSE_BODY"
            exit 1
        fi

    - name: Create deployment summary
      run: |
        echo "## 🚀 ArgoCD API Deployment" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Deployment Method:** ArgoCD API with manifest file" >> $GITHUB_STEP_SUMMARY
        echo "**Manifest Source:** \`k8s-manifests/app/deployment.yaml\`" >> $GITHUB_STEP_SUMMARY
        echo "**Image Applied:** \`ghcr.io/sumansaurabh/task-bb/backend:${GITHUB_SHA:0:7}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Images pushed:**" >> $GITHUB_STEP_SUMMARY
        echo "- \`ghcr.io/sumansaurabh/task-bb/backend:latest\`" >> $GITHUB_STEP_SUMMARY
        echo "- \`ghcr.io/sumansaurabh/task-bb/backend:${GITHUB_SHA:0:7}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Commit:** \`${GITHUB_SHA:0:7}\`" >> $GITHUB_STEP_SUMMARY
        echo "**Build:** \`${GITHUB_RUN_NUMBER}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Deployment applied using ArgoCD API by reading the local manifest file and replacing :latest tag." >> $GITHUB_STEP_SUMMARY